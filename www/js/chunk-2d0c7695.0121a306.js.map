{"version":3,"sources":["webpack:///./src/modules/ui/module/store.ts","webpack:///./src/modules/ui/module/routes.ts","webpack:///./src/modules/ui/module.ts"],"names":["namespaced","UiState","this","currentDevice","menuIsOpen","breakpoint","state","type","payload","orientation","os","Object","assign","UiStore","getters","mutations","actions","name","store","routes"],"mappings":"uIACA,MAAMA,GAAa,EACnB,MAAMC,EACF,cACIC,KAAKC,cAAgB,KACrBD,KAAKE,YAAa,EAClBF,KAAKG,WAAa,MAG1B,MAAM,UAAkB,OACpB,eAAiB,MAAyC,WAAlCH,KAAKI,MAAMH,cAAcI,KACjD,eAAiB,MAAyC,WAAlCL,KAAKI,MAAMH,cAAcI,KACjD,gBAAkB,MAAyC,YAAlCL,KAAKI,MAAMH,cAAcI,KAClD,oBAAsB,MAAyC,YAAlCL,KAAKI,MAAMH,cAAcI,MAE1D,MAAM,UAAoB,OACtB,iBAAiBC,GACb,MAAM,YAAEC,EAAW,KAAEF,EAAI,GAAEG,GAAOF,EAClCN,KAAKI,MAAMH,cAAgBQ,OAAOC,OAAO,GAAI,CAAEH,cAAaF,OAAMG,OAEtE,aAAeR,KAAKI,MAAMF,YAAcF,KAAKI,MAAMF,WACnD,WAAaF,KAAKI,MAAMF,YAAa,EACrC,YAAcF,KAAKI,MAAMF,YAAa,EACtC,cAAcI,GAAWN,KAAKI,MAAMD,WAAaG,GAErD,MAAM,UAAkB,QAEjB,MAAMK,EAAU,IAAI,OAAO,CAC9Bb,aACAM,MAAOL,EACPa,QAAS,EACTC,UAAW,EACXC,QAAS,IAEW,eAAaH,GClCtB,SCEA,cACXI,KAAM,KACNC,MAAOL,EACPM","file":"js/chunk-2d0c7695.0121a306.js","sourcesContent":["import { Getters, Mutations, Actions, Module, createMapper } from 'vuex-smart-module';\r\nconst namespaced = true;\r\nclass UiState {\r\n    constructor() {\r\n        this.currentDevice = null;\r\n        this.menuIsOpen = false;\r\n        this.breakpoint = null;\r\n    }\r\n}\r\nclass UiGetters extends Getters {\r\n    get isMobile() { return this.state.currentDevice.type === 'mobile'; }\r\n    get isTablet() { return this.state.currentDevice.type === 'tablet'; }\r\n    get isDesktop() { return this.state.currentDevice.type === 'desktop'; }\r\n    get isTouchDevice() { return this.state.currentDevice.type !== 'desktop'; }\r\n}\r\nclass UiMutations extends Mutations {\r\n    setCurrentDevice(payload) {\r\n        const { orientation, type, os } = payload;\r\n        this.state.currentDevice = Object.assign({}, { orientation, type, os });\r\n    }\r\n    toggleMenu() { this.state.menuIsOpen = !this.state.menuIsOpen; }\r\n    openMenu() { this.state.menuIsOpen = true; }\r\n    closeMenu() { this.state.menuIsOpen = false; }\r\n    setBreakpoint(payload) { this.state.breakpoint = payload; }\r\n}\r\nclass UiActions extends Actions {\r\n}\r\nexport const UiStore = new Module({\r\n    namespaced,\r\n    state: UiState,\r\n    getters: UiGetters,\r\n    mutations: UiMutations,\r\n    actions: UiActions,\r\n});\r\nexport const uiMapper = createMapper(UiStore);\r\n","export default [];\r\n","import { UiStore } from './module/store';\r\nimport routes from './module/routes';\r\nexport default {\r\n    name: 'ui',\r\n    store: UiStore,\r\n    routes\r\n};\r\n"],"sourceRoot":""}